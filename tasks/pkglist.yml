---

# Enable or disable dictionaries in the list _pkg_dict
- name: "conf: Create empty list _pkg_dict"
  ansible.builtin.set_fact:
    _pkg_dict: []
  tags: poudriere_pkglist_create_var

- name: "conf: Add items to the list _pkg_dict"
  ansible.builtin.set_fact:
    _pkg_dict: "{{ _pkg_dict + [item|combine({'enable': _combine_enable})] }}"
  loop: "{{ lookup('vars', 'pkg_dict_' ~ pkg_arch) }}"
  loop_control:
    label: "{{ item.pkglist }}"
  vars:
    _pkglist_enable: "{{ lookup('vars', 'pkglist_enable_' ~ pkg_arch, default={}) }}"
    _current_enable: "{{ item.enable|default(true) }}"
    _combine_enable: "{{ _pkglist_enable[item.pkglist]|default(_current_enable) }}"
  tags: poudriere_pkglist_create_var

- name: "conf: Debug _pkg_dict"
  ansible.builtin.debug:
    var: _pkg_dict
  when: poudriere_debug|bool
  tags: poudriere_pkglist_create_var

# Create directories
- name: "conf: Create directories {{ poudriere_pkglist_dir }}_{{ pkg_arch }}"
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: "{{ poudriere_owner }}"
    group: "{{ poudriere_group }}"
    mode: "{{ poudriere_mode_dir }}"
  loop:
    - "{{ poudriere_pkglist_dir }}_{{ pkg_arch }}"
    - "{{ poudriere_pkglist_dir }}_{{ pkg_arch }}.disabled"
  tags: poudriere_pkglist_create_dirs

# Disabled lists of packages
- name: "conf: Remove lists of packages from {{ poudriere_pkglist_dir }}_{{ pkg_arch }}"
  ansible.builtin.file:
    state: absent
    path: "{{ poudriere_pkglist_dir }}_{{ pkg_arch }}/{{ item.pkglist }}"
  loop: "{{ _pkg_dict }}"
  loop_control:
    label: "{{ item.pkglist }}"
  when: not item.enable
  tags: poudriere_pkglist_disabled

- name: "conf: Create lists of packages in {{ poudriere_pkglist_dir }}_{{ pkg_arch }}.disabled"
  ansible.builtin.template:
    src: poudriere.pkglist.j2
    dest: "{{ poudriere_pkglist_dir }}_{{ pkg_arch }}.disabled/{{ item.pkglist }}"
    owner: "{{ poudriere_owner }}"
    group: "{{ poudriere_group }}"
    mode: "{{ poudriere_mode }}"
    backup: "{{ poudriere_backup_conf|bool }}"
  loop: "{{ _pkg_dict }}"
  loop_control:
    label: "{{ item.pkglist }}"
  when: not item.enable
  tags: poudriere_pkglist_disabled

# Enabled lists of packages
- name: "conf: Remove lists of packages from {{ poudriere_pkglist_dir }}_{{ pkg_arch }}.disabled"
  ansible.builtin.file:
    state: absent
    path: "{{ poudriere_pkglist_dir }}_{{ pkg_arch }}.disabled/{{ item.pkglist }}"
  loop: "{{ _pkg_dict }}"
  loop_control:
    label: "{{ item.pkglist }}"
  when: item.enable
  tags: poudriere_pkglist_enabled

- name: "conf: Create lists of packages in {{ poudriere_pkglist_dir }}_{{ pkg_arch }}"
  ansible.builtin.template:
    src: poudriere.pkglist.j2
    dest: "{{ poudriere_pkglist_dir }}_{{ pkg_arch }}/{{ item.pkglist }}"
    owner: "{{ poudriere_owner }}"
    group: "{{ poudriere_group }}"
    mode: "{{ poudriere_mode }}"
    backup: "{{ poudriere_backup_conf|bool }}"
  loop: "{{ _pkg_dict }}"
  loop_control:
    label: "{{ item.pkglist }}"
  when: item.enable
  tags: poudriere_pkglist_enabled

# EOF
...
